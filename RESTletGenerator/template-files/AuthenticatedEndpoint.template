package $EndpointPackage;


import $EntityPackage.$AuthEntityName;
import $EntityPackage.$EntityName;
import com.tna.Endpoints.AuthorisedEndpoint;
import com.tna.Utils.Authorisation;
import javax.servlet.annotation.WebServlet;
import org.json.simple.JSONObject;

@WebServlet("/$Endpoint/*")
public class $EndpointName extends AuthorisedEndpoint{

    @Override
    public JSONObject doList(JSONObject obj) throws Authorisation.UnauthorisedException {
       new $AuthEntityName().auth(obj, $ListLevel);
       return new $EntityName().list();
    }

    @Override
    public JSONObject doCreate(JSONObject json) throws Authorisation.UnauthorisedException {
        new $AuthEntityName().auth(json, $CreateLevel);$Checking
        return new $EntityName().create(json); 
    }

    @Override
    public JSONObject doUpdate(JSONObject json, int resource) throws Authorisation.UnauthorisedException {
        new $AuthEntityName().auth(json, $UpdateLevel);
        return new $EntityName().update(json,resource);     }

    @Override
    public JSONObject doRead(JSONObject json, int resource) throws Authorisation.UnauthorisedException {
       new User().auth(json, $ReadLevel);
       return new $EntityName().read(resource);    
    }

    @Override
    public JSONObject doDelete(JSONObject json, int resource) throws Authorisation.UnauthorisedException {
       new $AuthEntityName().auth(json, $DeleteLevel);
       return new TestEntity().delete(resource); 
    }
